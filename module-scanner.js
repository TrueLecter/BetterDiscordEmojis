function n(id) {
	return webpackJsonp([], [], [id])
}

function scanFor(key) {
	console.log(`Scanning for objects with keys: ${key}`);
	for (let i = 0; i < 100000; i++) {
		try {
			const l = n(i);

			if (!l){
				continue;
			}

			let res = null;

			if (key instanceof Array) {
				res = hasAllKeys(l, key);
			} else {
				res = hasOnlyKey(l, key);
			}

			if (res) {
				console.log(i, l);
				return i;
			}
		} catch (e) {}
	}
}

function hasAllKeys(obj, keys) {
	for (const key of keys){
		try {
			if (!obj[key])
				return false;
		} catch (e) {}
	}
	return true;
}

function hasOnlyKey(obj, key) {
	return obj && obj[key] && (Object.keys(obj).length === 1);
}

function scan(){
	const scanningClasses = [
		{
			name: 'SETTINGS_CLASSES',
			keys: ['itemBrandSelected', 'itemBrand', 'itemDefaultSelected', 'itemDefault', 'itemDangerSelected', 'itemDanger', 'separator']
		},
		{
			name: 'SWITCH_CLASSES',
			keys: ['switchEnabled']
		},
		{
			name: 'FLEX_CHILD_CLASSES',
			keys: ['flex', 'flexChild']
		},
		{
			name: 'FLEX_CLASSES',
			keys: ['vertical', 'justifyStart', 'alignStretch', 'noWrap', 'alignStart']
		},
		{
			name: 'HEADER_CLASSES',
			keys: ['h3', 'defaultColor']
		},
		{
			name: 'SWITCH_ITEM_CLASSES',
			keys: ['titleDefault', 'note', 'dividerMini']
		},
		{
			name: 'DIVIDER_ITEM_CLASSES',
			keys: 'divider'
		},
		{
			name: 'LABEL_ITEM_CLASSES',
			keys: ['description', 'modeDefault']
		},
		{
			name: 'FONT_SIZE_CLASSES',
			keys: ['primary', 'small']
		},
		{
			name: 'CARD_CLASSES',
			keys: ['cardPrimary', 'card']
		}
	];

	const scanningConstants = [
		{
			name: 'EMOJI_BUTTON_CLASS',
			keys: ['emojiButton', 'channelTextArea']
		},
		{
			name: 'LOCAL_STORAGE_MODULE',
			keys: ['impl']
		},
		{
			name: 'EMOJI_STORAGE_MODULE',
			keys: ['Emoji', 'default']
		},
		{
			name: 'SERVERS_STORAGE_MODULE',
			keys: ['getGuilds']
		},
		{
			name: 'SERVERS_PERMISSIONS_MODULE',
			keys: ['getGuildPermissions']
		},
		{
			name: 'TRANSLATION_MODULE',
			keys: ['Messages']
		},
		{
			name: 'CUSTOM_EMOJI_STORAGE_MODULE',
			keys: ['getDisambiguatedEmojiContext']
		},
		{
			name: 'REACTION_EMOJI_CONVERTER',
			keys: ['toReactionEmoji']
		},
	];

	const moduleNumbers = {};

	for (const clazz of scanningClasses) {
		console.log(`Possible objects for ${clazz.name}: `);
		moduleNumbers[clazz.name] = scanFor(clazz.keys);
	}

	console.log('---------------------------------------------------------------\nScanning constans...');

	for (const clazz of scanningConstants) {
		console.log(`Possible objects for ${clazz.name}: `);
		moduleNumbers[clazz.name] = scanFor(clazz.keys);
	} 

	return moduleNumbers;
}

function generateRegistryContent(moduleNumbers) {
	var result = '\'use strict\';\n/*\n * This file was autogenerated \n * Any changes made here will be overriten!\n */';
	
	for (const key of Object.keys(moduleNumbers)) {
		result += `\nexports.${key} = ${moduleNumbers[key]};`;
	}

	result += '\n';

	return result;
}

generateRegistryContent(scan());